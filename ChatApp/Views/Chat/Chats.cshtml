@model List<ChatApp.ViewModels.ChatsViewModel>

@{
    ViewData["Title"] = "Chats";
}

<h2>Chats</h2>

<div class="list-group" id="chatList">
    @if (Model != null && Model.Any())
    {
        @foreach (var chat in Model)
        {
            var fontWeight = chat.countUnreadMessages == 0 ? "normal" : "bold";
            var fontColor = chat.countUnreadMessages == 0 ? "" : "color:#FFFFFF;";

            <a href="@Url.Action("Chat", "Chat", new { friendId = chat.friendId })"
               class="list-group-item list-group-item-action d-flex justify-content-between align-items-center"
               id="chat-@chat.friendId">
                <div>
                    <h5 class="mb-1">@chat.friendName</h5>
                    <p class="mb-1 text-muted" id="lastMessage-@chat.friendId" style="font-weight:@fontWeight; @fontColor">
                        @chat.lastMesasageSenderName: @chat.lastMessage
                    </p>
                </div>
                @if (chat.countUnreadMessages > 0)
                {
                    <span class="badge-unread">@chat.countUnreadMessages</span>
                }
            </a>
        }
    }
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
    <script>
        var connection = new signalR.HubConnectionBuilder()
            .withUrl("/chatHub")
            .build();

        connection.on("ReceiveMessage", function (messageDTO) {
            var chatElement = document.getElementById(`chat-${messageDTO.SenderId}`);
            var lastMessageElement = document.getElementById(`lastMessage-${messageDTO.SenderId}`);

            if (chatElement) {
                if (lastMessageElement) {
                    lastMessageElement.textContent = `${messageDTO.SenderFullName}: ${messageDTO.MessageContent}`;
                    lastMessageElement.style.fontWeight = "bold";
                    lastMessageElement.style.color = "#FFFFFF";
                } else {
                    const newMessageElement = document.createElement("p");
                    newMessageElement.id = `lastMessage-${messageDTO.SenderId}`;
                    newMessageElement.className = "mb-1 text-muted";
                    newMessageElement.style.fontWeight = "bold";
                    newMessageElement.style.color = "#FFFFFF";
                    newMessageElement.textContent = `${messageDTO.SenderFullName}: ${messageDTO.MessageContent}`;
                    chatElement.querySelector("div").appendChild(newMessageElement);
                }

                var badge = chatElement.querySelector(".badge-unread");
                if (badge) {
                    var count = parseInt(badge.textContent);
                    badge.textContent = count + 1;
                } else {
                    var newBadge = document.createElement("span");
                    newBadge.className = "badge-unread";
                    newBadge.textContent = "1";
                    chatElement.appendChild(newBadge);
                }

                chatElement.parentNode.prepend(chatElement);
            } else {
                const chatList = document.getElementById("chatList");
                const newChatElement = document.createElement("a");
                newChatElement.href = `/Chat/Chat?friendId=${messageDTO.SenderId}`;
                newChatElement.className = "list-group-item list-group-item-action d-flex justify-content-between align-items-center";
                newChatElement.id = `chat-${messageDTO.SenderId}`;

                const chatContent = document.createElement("div");
                chatContent.style.position = "relative";

                const friendNameHeader = document.createElement("h5");
                friendNameHeader.className = "mb-1";
                friendNameHeader.textContent = messageDTO.SenderFullName;

                const newMessageElement = document.createElement("p");
                newMessageElement.id = `lastMessage-${messageDTO.SenderId}`;
                newMessageElement.className = "mb-1 text-muted";
                newMessageElement.style.fontWeight = "bold";
                newMessageElement.style.color = "#FFFFFF";
                newMessageElement.textContent = `${messageDTO.SenderFullName}: ${messageDTO.MessageContent}`;

                chatContent.appendChild(friendNameHeader);
                chatContent.appendChild(newMessageElement);
                newChatElement.appendChild(chatContent);

                const newBadge = document.createElement("span");
                newBadge.className = "badge-unread";
                newBadge.textContent = "1";
                newChatElement.appendChild(newBadge);

                chatList.prepend(newChatElement);
            }
        });


        connection.start().then(function () {
            document.getElementById("sendButton").disabled = false;
        }).catch(function (err) {
            console.error(err.toString());
        });


    </script>
}
