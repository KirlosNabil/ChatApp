@model ChatApp.ViewModels.ChatViewModel

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Chat - @Model.friendName</title>
    <link rel="stylesheet" href="~/css/chat.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/site.css" />
</head>
<body>
    <div class="chat-container">
        <div class="chat-header">
            <a href="@Url.Action("Chats", "Chat")" class="btn btn-secondary" style="position: absolute; left: 10px; top: 10px;">Back</a>
            @Model.friendName
        </div>
        <div id="chatBox" class="chat-box">
            @foreach (var msg in Model.ChatMessages)
            {
                var isMine = msg.Item2 != Model.friendName;
                var status = msg.Item1.IsRead ? "read" : (msg.Item1.Delivered ? "delivered" : "sent");
                <div class="chat-message @(isMine ? "mine" : "other")">
                    <p>
                        <b>@msg.Item2:</b> @msg.Item1.Message
                        <span class="message-status @status" id="status-@msg.Item1.Id"></span>
                    </p>
                </div>
            }
        </div>
        <div class="input-container">
            <input type="text" id="messageInput" placeholder="Type a message..." />
            <button id="sendButton" disabled>Send</button>
        </div>
    </div>
</body>
</html>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
    <script>
        var connection = new signalR.HubConnectionBuilder()
            .withUrl("/chatHub")
            .build();

        connection.on("ReceiveMessage", function (sender, name, message) {
            var chatBox = document.getElementById("chatBox");
            var isMine = name !== "@Model.friendName";
            var className = isMine ? "mine" : "other";
            chatBox.innerHTML += '<div class="chat-message ' + className + '"><p><b>' + name + ':</b> ' + message + '</p></div>';
            chatBox.scrollTop = chatBox.scrollHeight;
        });

        connection.start().then(function () {
            document.getElementById("sendButton").disabled = false;
        }).catch(function (err) {
            console.error(err.toString());
        });

        document.getElementById("sendButton").addEventListener("click", function () {
            var message = document.getElementById("messageInput").value;
            if (message.trim() === "") return;
            var receiverId = "@Model.friendId";
            connection.invoke("SendMessage", receiverId, message);
            document.getElementById("messageInput").value = "";
        });
    </script>
}
