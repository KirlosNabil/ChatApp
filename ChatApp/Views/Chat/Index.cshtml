@model ChatApp.ViewModels.ChatViewModel

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Chat - @Model.friendName</title>
    <style>
        html, body {
            margin: 0;
            padding: 0;
            height: 100%;
            font-family: Arial, sans-serif;
            background-color: #2E2E2E;
            color: #fff;
        }

        .chat-container {
            display: flex;
            flex-direction: column;
            height: 100vh;
            max-width: 800px;
            margin: 0 auto;
            border: 1px solid #444;
        }

        .chat-header {
            padding: 1rem;
            text-align: center;
            font-size: 1.5rem;
            border-bottom: 1px solid #444;
        }

        .chat-box {
            flex: 1;
            overflow-y: auto;
            padding: 1rem;
            /* Increase bottom margin to prevent messages from being hidden */
            margin-bottom: 140px;
        }

        .chat-message {
            max-width: 70%;
            margin: 0.5rem 0;
            padding: 0.5rem 1rem;
            border-radius: 15px;
            word-wrap: break-word;
        }

            .chat-message p {
                font-size: 1.2rem;
                margin: 0;
            }

        .mine {
            background-color: #00BCD4;
            color: #fff;
            margin-left: auto;
            text-align: right;
        }

        .other {
            background-color: #fff;
            color: #000;
            margin-right: auto;
            text-align: left;
        }

        .input-container {
            position: fixed;
            left: 0;
            right: 0;
            /* Move the send bar higher by increasing the bottom value */
            bottom: 100px;
            display: flex;
            justify-content: center;
            padding: 0.75rem;
            background-color: #2E2E2E;
        }

        #messageInput {
            width: 50%;
            max-width: 400px;
            padding: 0.5rem 1rem;
            border: 1px solid #ccc;
            border-radius: 20px;
            outline: none;
            font-size: 1rem;
            background-color: #fff;
            color: #000;
        }

        #sendButton {
            margin-left: 1rem;
            padding: 0.75rem 1.5rem;
            border-radius: 20px;
            background-color: #00BCD4;
            color: #fff;
            border: none;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <div class="chat-container">
        <div class="chat-header">
            @Model.friendName
        </div>
        <div id="chatBox" class="chat-box">
            @foreach (var msg in Model.ChatMessages)
            {
                var isMine = msg.Item2 != Model.friendName;
                <div class="chat-message @(isMine ? "mine" : "other")">
                    <p><b>@msg.Item2:</b> @msg.Item1.Message</p>
                </div>
            }
        </div>
        <div class="input-container">
            <input type="text" id="messageInput" placeholder="Type a message..." />
            <button id="sendButton" disabled>Send</button>
        </div>
    </div>

    @section Scripts {
        <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
        <script>
            var connection = new signalR.HubConnectionBuilder()
                .withUrl("/chatHub")
                .build();

            connection.on("ReceiveMessage", function (sender, name, message) {
                var chatBox = document.getElementById("chatBox");
                var isMine = name !== "@Model.friendName";
                var className = isMine ? "mine" : "other";
                chatBox.innerHTML += '<div class="chat-message ' + className + '"><p><b>' + name + ':</b> ' + message + '</p></div>';
                chatBox.scrollTop = chatBox.scrollHeight;
            });

            connection.start().then(function () {
                document.getElementById("sendButton").disabled = false;
            }).catch(function (err) {
                console.error(err.toString());
            });

            document.getElementById("sendButton").addEventListener("click", function () {
                var message = document.getElementById("messageInput").value;
                if (message.trim() === "") return;
                var receiverId = "@Model.friendId";
                connection.invoke("SendMessage", receiverId, message);
                document.getElementById("messageInput").value = "";
            });
        </script>
    }
</body>
</html>
