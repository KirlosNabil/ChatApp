@model List<ChatApp.ViewModels.FriendRequestViewModel>

@{
    ViewData["Title"] = "Friend Requests";
}

<h2 class="mt-4">Friend Requests</h2>

<ul class="list-group" id="requestsList">
    @if (Model.Any())
    {
        foreach (var request in Model)
        {
            <li class="list-group-item d-flex justify-content-between align-items-center">
                <span>@request.SenderFirstName @request.SenderLastName</span>
                <div>
                    <button class="btn btn-success btn-sm accept-btn" data-requestid="@request.SenderId">Accept</button>
                    <button class="btn btn-danger btn-sm reject-btn" data-requestid="@request.SenderId">Reject</button>
                </div>
            </li>
        }
    }
</ul>

<p id="noRequestsMessage" style="display: @(Model.Any() ? "none" : "block");">No friend requests.</p>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>

    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/friendRequestHub")
            .build();

        connection.on("NewFriendRequest", function (receiverId, firstname, lastname, requestId) {
            document.getElementById("noRequestsMessage").style.display = "none";

            const requestsList = document.getElementById("requestsList");

            const li = document.createElement("li");
            li.className = "list-group-item d-flex justify-content-between align-items-center";
            li.innerHTML = `
                        <span>${firstname} ${lastname}</span>
                        <div>
                            <button class="btn btn-success btn-sm accept-btn" data-requestid="${requestId}">Accept</button>
                            <button class="btn btn-danger btn-sm reject-btn" data-requestid="${requestId}">Reject</button>
                        </div>
                    `;

            requestsList.appendChild(li);
        });

        document.addEventListener("click", function (event) {
            if (event.target.classList.contains("accept-btn") || event.target.classList.contains("reject-btn")) {
                const requestId = event.target.getAttribute("data-requestid");
                const url = event.target.classList.contains("accept-btn")
                    ? `/FriendRequest/Accept/${requestId}`
                    : `/FriendRequest/Reject/${requestId}`;

                fetch(url, { method: 'POST' })
                    .then(() => {
                        const listItem = event.target.closest("li");
                        listItem.remove();

                        if (!document.querySelector("#requestsList .list-group-item")) {
                            document.getElementById("noRequestsMessage").style.display = "block";
                        }
                    });
            }
        });

        connection.start().then(function () {
            console.log("Connected to FriendRequestHub.");
        }).catch(function (err) {
            console.error(err.toString());
        });
    </script>
}
