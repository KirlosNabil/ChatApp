@model List<ChatApp.ViewModels.FriendRequestViewModel>

@{
    ViewData["Title"] = "Friend Requests";
}

<h2 class="mt-4">Friend Requests</h2>

<ul class="list-group" id="requestsList">
    @if (Model.Any())
    {
        foreach (var request in Model)
        {
            <li class="list-group-item d-flex justify-content-between align-items-center" id="request-@request.SenderId">
                <div id="content-@request.SenderId" class="d-flex w-100 justify-content-between">
                    <span>@request.SenderFirstName @request.SenderLastName</span>
                    <div>
                        <button class="btn btn-success btn-sm ms-2" onclick="handleResponse('@request.SenderId', 'Accept', 'text-success')">Accept</button>
                        <button class="btn btn-danger btn-sm ms-1" onclick="handleResponse('@request.SenderId', 'Reject', 'text-danger')">Reject</button>
                    </div>
                </div>
            </li>
        }
    }
</ul>

<p id="noRequestsMessage" style="display: @(Model.Any() ? "none" : "block");">No friend requests.</p>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>

    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/friendRequestHub")
            .build();

        connection.on("NewFriendRequest", function (senderId, firstname, lastname) {
            document.getElementById("noRequestsMessage").style.display = "none";

            const requestsList = document.getElementById("requestsList");

            const li = document.createElement("li");
            li.className = "list-group-item d-flex justify-content-between align-items-center";
            li.id = `request-${senderId}`;
            li.innerHTML = `
                        <div id="content-${senderId}" class="d-flex w-100 justify-content-between">
                            <span>${firstname} ${lastname}</span>
                            <div>
                                <button class="btn btn-success btn-sm ms-2" onclick="handleResponse('${senderId}', 'Accept', 'text-success')">Accept</button>
                                <button class="btn btn-danger btn-sm ms-1" onclick="handleResponse('${senderId}', 'Reject', 'text-danger')">Reject</button>
                            </div>
                        </div>
                    `;

            requestsList.appendChild(li);
        });

        connection.start().then(function () {
            console.log("Connected to FriendRequestHub.");
        }).catch(function (err) {
            console.error(err.toString());
        });

        function handleResponse(requestId, action, textClass) {
            fetch(`/Home/${action}FriendRequest`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded'
                },
                body: `id=${requestId}`
            })
                .then(response => {
                    if (response.ok) {
                        const contentElement = document.getElementById(`content-${requestId}`);
                        contentElement.innerHTML = `
                                <span>${contentElement.querySelector('span').textContent}</span>
                                <span class="${textClass} ms-3">${action === 'Accept' ? 'Accepted' : 'Rejected'}</span>
                            `;
                    }
                })
                .catch(error => console.error('Error:', error));
        }
    </script>
}
