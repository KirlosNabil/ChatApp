@model List<ChatApp.ViewModels.FriendRequestViewModel>

@{
    ViewData["Title"] = "Friend Requests";
}

<h2 class="mt-4">Friend Requests</h2>

<ul class="list-group" id="requestsList">
    @if (Model.Any())
    {
        foreach (var request in Model)
        {
            <li class="list-group-item d-flex justify-content-between align-items-center" id="request-@request.SenderId">
                <span>@request.SenderFirstName @request.SenderLastName</span>
                <div>
                    <form method="post" asp-action="AcceptFriendRequest" asp-controller="Home" style="display: inline;"
                          onsubmit="handleResponse(event, @request.SenderId, 'Accepted', 'text-success')">
                        <input type="hidden" name="id" value="@request.SenderId" />
                        <button type="submit" class="btn btn-success btn-sm">Accept</button>
                    </form>

                    <form method="post" asp-action="RejectFriendRequest" asp-controller="Home" style="display: inline;"
                          onsubmit="handleResponse(event, @request.SenderId, 'Rejected', 'text-danger')">
                        <input type="hidden" name="id" value="@request.SenderId" />
                        <button type="submit" class="btn btn-danger btn-sm">Reject</button>
                    </form>
                </div>
            </li>
        }
    }
</ul>

<p id="noRequestsMessage" style="display: @(Model.Any() ? "none" : "block");">No friend requests.</p>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>

    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/friendRequestHub")
            .build();

        connection.on("NewFriendRequest", function (receiverId, firstname, lastname, requestId) {
            document.getElementById("noRequestsMessage").style.display = "none";

            const requestsList = document.getElementById("requestsList");

            const li = document.createElement("li");
            li.className = "list-group-item d-flex justify-content-between align-items-center";
            li.id = `request-${requestId}`;
            li.innerHTML = `
                        <span>${firstname} ${lastname}</span>
                        <div>
                            <form method="post" action="/Home/AcceptFriendRequest" style="display: inline;"
                                  onsubmit="handleResponse(event, ${requestId}, 'Accepted', 'text-success')">
                                <input type="hidden" name="id" value="${requestId}" />
                                <button type="submit" class="btn btn-success btn-sm">Accept</button>
                            </form>

                            <form method="post" action="/Home/RejectFriendRequest" style="display: inline;"
                                  onsubmit="handleResponse(event, ${requestId}, 'Rejected', 'text-danger')">
                                <input type="hidden" name="id" value="${requestId}" />
                                <button type="submit" class="btn btn-danger btn-sm">Reject</button>
                            </form>
                        </div>
                    `;

            requestsList.appendChild(li);
        });

        connection.start().then(function () {
            console.log("Connected to FriendRequestHub.");
        }).catch(function (err) {
            console.error(err.toString());
        });

        function handleResponse(event, requestId, statusText, textClass) {
            event.preventDefault();

            const requestElement = document.getElementById(`request-${requestId}`);
            if (requestElement) {
                requestElement.innerHTML = `<span class="${textClass}">${statusText}</span>`;
            }
        }
    </script>
}
