@{
    ViewData["Title"] = "Home Page";
}

<div class="container">
    <div class="welcome-box">
        <h1 class="welcome-text">Your Ultimate Chat Experience Starts Here!</h1>
        <p class="welcome-subtext">Connect with friends, build relationships, and start conversations.</p>
    </div>

    @if (User.Identity?.IsAuthenticated ?? false)
    {
        <div class="search-section">
            <h3 class="find-friends">Find New Friends</h3>
            <form method="get" asp-action="Search" asp-controller="Home" class="d-flex mb-3">
                <input type="text" name="username" class="search-input" placeholder="Search by username..." required />
                <button type="submit" class="btn">Search</button>
            </form>
        </div>

        <div class="active-friends-box">
            <h3 class="active-friends-header">Active Friends</h3>
            <ul class="list-group" id="activeFriendsList"></ul>
        </div>

    @model List<ChatApp.Models.User>

        @if (Model != null && Model.Any())
        {
            <div class="friend-list">
                <ul class="list-group">
                    @foreach (var user in Model)
                    {
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <span>@user.FirstName @user.LastName</span>
                            <button class="btn sendRequestBtn" data-userid="@user.Id">
                                Add Friend
                            </button>
                        </li>
                    }
                </ul>
            </div>
        }
        else if (Model != null)
        {
            <p class="no-users">No users found.</p>
        }
    }
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
    <script>
        if (@Json.Serialize(User.Identity.IsAuthenticated)) {
            var friendConnection = new signalR.HubConnectionBuilder()
                .withUrl("/friendHub")
                .build();

            var notificationConnection = new signalR.HubConnectionBuilder()
                .withUrl("/notificationHub")
                .build();

            Promise.all([
                friendConnection.start(),
                notificationConnection.start()
            ]).then(function () {
                const sendRequestButtons = document.querySelectorAll(".sendRequestBtn");

                sendRequestButtons.forEach(button => {
                    button.disabled = false;

                    button.addEventListener("click", function () {
                        var receiverId = button.getAttribute("data-userid");
                        button.disabled = true;
                        button.innerText = "Request Sent";

                        friendConnection.invoke("SendFriendRequest", receiverId)
                            .then(function () {
                                notificationConnection.invoke("FriendRequestNotification", receiverId);
                            })
                            .catch(function (err) {
                                console.error("Friend request error:", err.toString());
                                button.disabled = false;
                                button.innerText = "Add Friend";
                            });
                    });
                });

                friendConnection.invoke("GetOnlineFriends")
                    .then(function (onlineFriends) {
                        const activeFriendsList = document.getElementById("activeFriendsList");
                        activeFriendsList.innerHTML = '';

                        onlineFriends.forEach(function (friend) {
                            if (!document.getElementById(`active-friend-${friend.friendId}`)) {
                                const friendElement = document.createElement("li");
                                friendElement.id = `active-friend-${friend.friendId}`;
                                friendElement.innerHTML = `
                                <div class="friend-container">
                                    <div class="friend-info">
                                        <span>${friend.firstName} ${friend.lastName}</span>
                                        <div class="online-status">
                                            <div class="online-dot"></div>
                                            <span>Online</span>
                                        </div>
                                    </div>
                                            <button class="message-btn" onclick="window.location.href='/Chat/Chat?friendId=${friend.friendId}'">
                                        <img src="/images/message-icon.png" alt="Message" class="icon-image"/>
                                    </button>
                                </div>
                            `;
                                activeFriendsList.appendChild(friendElement);
                            }
                        });
                    })
                    .catch(function (err) {
                        console.error(err.toString());
                    });
            }).catch(function (err) {
                console.error(err.toString());
            });
        }
    </script>
}
