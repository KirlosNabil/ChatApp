@model List<ChatApp.ViewModels.FriendViewModel>

@{
    ViewData["Title"] = "Friends List";
}

<h2 class="mt-4">Friends List</h2>

<ul class="list-group" id="friendsList">
    @if (Model.Any())
    {
        foreach (var friend in Model)
        {
            <li class="list-group-item d-flex justify-content-between align-items-center" id="friend-@friend.FriendId">
                <span>@friend.FirstName @friend.LastName</span>
                <div>
                    <a href="@Url.Action("Chat", "Chat", new { friendId = @friend.FriendId })" class="btn btn-primary btn-sm">Chat</a>
                    <form method="post" action="@Url.Action("RemoveFriend", "Friend")" style="display: inline;">
                        <input type="hidden" name="friendId" value="@friend.FriendId" />
                        <button type="submit" class="btn btn-danger btn-sm">Remove</button>
                    </form>
                </div>
            </li>
        }
    }
</ul>

<p id="noFriendsMessage" style="display: @(Model.Any() ? "none" : "block");">No friends found.</p>
