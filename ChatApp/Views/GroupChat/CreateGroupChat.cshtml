@model ChatApp.ViewModels.CreateGroupChatViewModel

<head>
    <link rel="stylesheet" href="~/css/site.css" />
</head>

<h2>Create Group Chat</h2>

<form method="post">
    <div class="form-group">
        <label for="groupName">Group Name</label>
        <input type="text" id="groupName" name="Name" class="form-control" required />
    </div>

    <div id="selectedMembersContainer"></div>

    <div class="friend-list mt-3">
        <ul class="list-group">
            <h4>Group Members</h4>
            @foreach (var friend in Model.Friends)
            {
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <span>@friend.FirstName @friend.LastName</span>
                    <div>
                        <button type="button" class="btn btn-success btn-sm"
                                onclick="toggleSelect(this, '@friend.FriendId')">
                            Select
                        </button>
                    </div>
                </li>
            }
        </ul>
    </div>

    <button type="submit" class="btn btn-primary mt-3">Create Group</button>
</form>

<script>
    let selectedMemberIds = new Set();

    function toggleSelect(button, userId) {
        const hiddenInputsDiv = document.getElementById("selectedMembersContainer");

        if (selectedMemberIds.has(userId)) {
            selectedMemberIds.delete(userId);
            button.textContent = "Select";
            button.classList.remove("btn-danger");
            button.classList.add("btn-success");

            const inputToRemove = hiddenInputsDiv.querySelector(`input[value='${userId}']`);
            if (inputToRemove) inputToRemove.remove();
        } else {
            selectedMemberIds.add(userId);
            button.textContent = "Remove";
            button.classList.remove("btn-success");
            button.classList.add("btn-danger");

            const input = document.createElement("input");
            input.type = "hidden";
            input.name = "Members";
            input.value = userId;
            hiddenInputsDiv.appendChild(input);
        }
    }
</script>
