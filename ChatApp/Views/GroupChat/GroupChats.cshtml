@model List<ChatApp.ViewModels.GroupChatsViewModel>

<div style="display: flex; justify-content: space-between; align-items: center; margin-bottom:10px;">
    <h2>Group Chats</h2>
    <a href="@Url.Action("CreateGroupChat", "GroupChat")" class="btn btn-primary" style="margin-right: 20px;">
        + Create Group
    </a>
</div>
<div class="list-group" id="chatList">
    @if (Model != null && Model.Any())
    {
        @foreach (var chat in Model)
        {

            <a href="@Url.Action("GroupChat", "GroupChat", new { groupId = chat.GroupId })"
               class="list-group-item list-group-item-action d-flex justify-content-between align-items-center"
               id="chat-@chat.GroupId">
                <div>
                    <h5 class="mb-1">@chat.GroupName</h5>
                    <p class="mb-1 text-muted" id="lastMessage-@chat.GroupId" style="font-weight:normal;">
                        @chat.LastMessageSenderName: @chat.LastMessage
                    </p>
                </div>
            </a>
        }
    }
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
    <script>
        var connection = new signalR.HubConnectionBuilder()
            .withUrl("/groupChatHub")
            .build();

        connection.on("ReceiveGroupMessage", function (messageDTO) {
            var chatElement = document.getElementById(`chat-${messageDTO.GroupId}`);
            var lastMessageElement = document.getElementById(`lastMessage-${messageDTO.GroupId}`);

            if (chatElement) {
                if (lastMessageElement) {
                    lastMessageElement.textContent = `${messageDTO.SenderFullName}: ${messageDTO.MessageContent}`;
                    lastMessageElement.style.fontWeight = "bold";
                    lastMessageElement.style.color = "#FFFFFF";
                } else {
                    const newMessageElement = document.createElement("p");
                    newMessageElement.id = `lastMessage-${messageDTO.GroupId}`;
                    newMessageElement.className = "mb-1 text-muted";
                    newMessageElement.style.fontWeight = "bold";
                    newMessageElement.style.color = "#FFFFFF";
                    newMessageElement.textContent = `${messageDTO.SenderFullName}: ${messageDTO.MessageContent}`;
                    chatElement.querySelector("div").appendChild(newMessageElement);
                }

                chatElement.parentNode.prepend(chatElement);
            } else {
                const chatList = document.getElementById("chatList");
                const newChatElement = document.createElement("a");
                newChatElement.href = `/GroupChat/GroupChat?groupId=${messageDTO.GroupId}`;
                newChatElement.className = "list-group-item list-group-item-action d-flex justify-content-between align-items-center";
                newChatElement.id = `chat-${messageDTO.GroupId}`;

                const chatContent = document.createElement("div");
                chatContent.style.position = "relative";

                const groupNameHeader = document.createElement("h5");
                groupNameHeader.className = "mb-1";
                groupNameHeader.textContent = messageDTO.GroupName;

                const newMessageElement = document.createElement("p");
                newMessageElement.id = `lastMessage-${messageDTO.GroupId}`;
                newMessageElement.className = "mb-1 text-muted";
                newMessageElement.style.fontWeight = "bold";
                newMessageElement.style.color = "#FFFFFF";
                newMessageElement.textContent = `${messageDTO.SenderFullName}: ${messageDTO.MessageContent}`;

                chatContent.appendChild(groupNameHeader);
                chatContent.appendChild(newMessageElement);
                newChatElement.appendChild(chatContent);

                chatList.prepend(newChatElement);
            }
        });

        connection.start().then(function () {
            console.log("SignalR connection started");
        }).catch(function (err) {
            console.error(err.toString());
        });
    </script>
}
