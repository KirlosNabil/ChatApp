@model ChatApp.ViewModels.GroupChatViewModel

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Group Chat - @Model.GroupName</title>
    <link rel="stylesheet" href="~/css/chat.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/site.css" />
</head>
<body>
    <div class="chat-container">
        <div class="chat-header">
            <a href="@Url.Action("GroupChats", "GroupChat")" class="btn btn-secondary" style="position: absolute; left: 10px; top: 10px;">Back</a>
            @Model.GroupName
        </div>
        <div id="chatBox" class="chat-box">
            @foreach (var msg in Model.GroupChatMessages)
            {
                var isMine = msg.SenderFullName == Model.UserName;
                <div class="chat-message @(isMine ? "mine" : "other")">
                    <p>
                        <b>@msg.SenderFullName:</b> @msg.MessageContent
                    </p>
                </div>
            }
        </div>
        <div class="input-container">
            <input type="text" id="messageInput" placeholder="Type a message..." />
            <button id="sendButton" disabled>Send</button>
        </div>
    </div>
</body>
</html>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
    <script>
        var connection = new signalR.HubConnectionBuilder()
            .withUrl("/groupChatHub")
            .build();

        connection.on("ReceiveGroupMessage", function (messageDTO) {
            var chatBox = document.getElementById("chatBox");

            var isMine = messageDTO.senderFullName === "@Model.UserName";
            var className = isMine ? "mine" : "other";

            chatBox.innerHTML += `
                <div class="chat-message ${className}">
                    <p>
                        <b>${messageDTO.senderFullName}:</b> ${messageDTO.messageContent}
                    </p>
                </div>
            `;

            chatBox.scrollTop = chatBox.scrollHeight;
        });

        connection.start().catch(function (err) {
            console.error(err.toString());
        });

        document.getElementById("sendButton").addEventListener("click", function () {
            var message = document.getElementById("messageInput").value;
            if (message.trim() === "") return;
            var groupId = parseInt("@Model.GroupId");

            connection.invoke("SendGroupMessage", groupId, message);
            document.getElementById("messageInput").value = "";
            document.getElementById("sendButton").disabled = true;
        });
        document.getElementById("messageInput").addEventListener("input", function () {
            var message = this.value.trim();
            document.getElementById("sendButton").disabled = message === "";
        });

    </script>
}
